const rm = require('rimraf');
const yargs = require('yargs');
const cypress = require('cypress');
const chalk = require('chalk');

const argv = yargs
  .options({
    browser: {
      alias: 'b',
      describe: 'choose browser that you want to run tests on.',
      default: 'chrome',
      choices: ['chrome', 'electron'],
    },
  })
  .help().argv;

rm('.nyc_output', (error: any) => {
  if (error) {
    console.error(`Error while removing existing coverage files: ${error}`);
    process.exit(1);
  }
  console.log('Removed all existing coverage files successfully!');
});
rm('coverage', (error: any) => {
  if (error) {
    console.error(`Error while removing existing coverage reports: ${error}`);
    process.exit(1);
  }
  console.log('Removed all existing coverage reports successfully!');

  console.log(`Server expected to be running ON port 9000`);
  console.log(`Make sure you already started the local server using  ${chalk.cyan('npm run webapp:instrumenter')}`);
  console.log(`Starting Cypress..`);
  cypress
    .run({
      browser: argv.browser,
      spec: argv.spec,
      config: {
        baseUrl: 'http://localhost:9000',
      },
    })
    .then((results: any) => {
      if (!results || !results.config) {
        console.error('results null, or no tests run !!!', results);
        console.error('Please check and fix above errors');
        process.exit(1);
      }
      console.log('Finished testing.');
      console.log(`Please check ${chalk.green('./coverage/lcov-report/index.html')}`);
    })
    .catch((error: any) => {
      console.error('errors: ', error);
      process.exit(1);
    });


});

