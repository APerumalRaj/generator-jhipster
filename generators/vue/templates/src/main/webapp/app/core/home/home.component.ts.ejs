import { computed, ComputedRef, defineComponent, inject } from 'vue';
<%_ if (enableTranslation) { _%>
import { useI18n } from 'vue-i18n-bridge';
<%_ } _%>

import LoginService from '@/account/login.service';
import { useStore } from '@/store';

export default defineComponent({
  setup(this: any, prop) {
    const loginService = inject<LoginService>('loginService');

    const authenticated: ComputedRef<string> = computed(() => useStore().getters.authenticated);
    const username: ComputedRef<string> = computed(() => useStore().getters.account?.login ?? '');

    const openLogin = () => {
<%_ if (!authenticationTypeOauth2) { _%>
      loginService.openLogin();
<%_ } else { %>
      loginService.login();
<%_ } _%>
    };

    return {
      authenticated,
      username,
      openLogin,
<%_ if (enableTranslation) { _%>
      t$: useI18n().t,
<%_ } _%>
    };
  },
});
